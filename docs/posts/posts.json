[
  {
    "path": "posts/2022-03-12-project2/",
    "title": "Text Analysis Example",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Margaret Hammond",
        "url": {
          "https://github.com/mbhammond/a4-hammond-margaret": {}
        }
      }
    ],
    "date": "2022-03-12",
    "categories": [],
    "contents": "\r\n\r\n\r\nhide\r\n\r\ninclude_graphics('born_to_die.jpg')\r\n\r\n\r\n\r\n\r\nFigure 1: Electric Lady Studios 2012\r\n\r\n\r\n\r\nOverview\r\nIn this task, I will be doing a text analysis on Lana Del Rey’s breakout album, Born to Die. This 2012 album became a breakout pop sensation, and is known as a depressing, sensual, teen-angst, love-laced album. I will be organizing the lyrics by track number, and performing sentiment analysis and word counts to analyze each song\r\nGet Born to Die - the Album Data Wrangling\r\n\r\n\r\nhide\r\n\r\nlana_album <- pdf_text(here('data/pdf_analysis/lana-del-rey-born-to-die-lyrics.pdf'))\r\n\r\n# Seperating the lines of music \r\n\r\nlana_lines <- data.frame(lana_album) %>% \r\n  mutate(page = 1:n()) %>% \r\n  mutate(full_text = str_split(lana_album,\r\n                               pattern = '\\\\n')) %>% \r\n  unnest(full_text) %>% \r\n  mutate(full_text = str_squish(full_text))\r\n\r\n\r\n\r\nMusic Tidying\r\n\r\n\r\nhide\r\n\r\nlana_songs <- lana_lines %>% \r\n  mutate(song = ifelse(str_detect(full_text, \"Song\"),\r\n          full_text,\r\n          NA)) %>% \r\n  fill(song, .direction = 'down') %>% \r\n  separate(col = song, into = c('song', 'no'),\r\n           sep = \" \") %>% \r\n  mutate(song = as.numeric(as.roman(no))) %>% \r\n  mutate(no = as.numeric(as.roman(no))) %>% \r\n  mutate(song = case_when(\r\n    song == '1' ~ 'Born To Die',\r\n    song == '2' ~ 'Off To The Races',\r\n    song == '3' ~ 'Blue Jeans',\r\n    song == '4' ~ 'Video Games',\r\n    song == '5' ~ 'Diet Mountain Dew',\r\n    song == '6' ~ 'National Anthem',\r\n    song == '7' ~ 'Dark Paradise',\r\n    song == '8' ~ 'Radio',\r\n    song == '9' ~ 'Carmen',\r\n    song == '10' ~ 'Million Dollar Man',\r\n    song == '11' ~ 'Summertime Sadness',\r\n    song == '12' ~ 'This Is What \\n Makes Us Girls',\r\n    song == '13' ~ 'Without You',\r\n    song == '14' ~ 'Lolita',\r\n    song == '15' ~ 'Lucky Ones',\r\n    song == '16' ~ 'Ride',\r\n    song == '17' ~ 'Blue Velvet'\r\n  )) \r\n\r\n\r\n#mutate(fish = case_when(\r\n #   fish == 'jack_coho' ~ \"Jack Coho\",\r\n  #  fish == 'coho' ~ \"Coho\",\r\n   # fish == 'steelhead' ~ \"Steelhead\"\r\n # ))\r\n\r\n\r\n\r\nWord count by Song\r\n\r\n\r\nhide\r\n\r\nlana_song_words <- lana_songs %>% \r\n  unnest_tokens(word, full_text, token = \"words\") %>% \r\n  select(-lana_album)\r\n\r\nlana_wordcount <- lana_song_words %>% \r\n  count(song, no, word) \r\n\r\nx <- stop_words\r\n\r\nlana_words_clean <- lana_song_words %>% \r\n  anti_join(stop_words, by = 'word')\r\n\r\nlana_nonstop_counts <- lana_words_clean %>% \r\n  count(song, no, word)\r\n\r\n\r\n\r\nFind top 5 words for each song\r\n\r\n\r\nhide\r\n\r\ntop_5_words <- lana_nonstop_counts %>% \r\n  group_by(song) %>% \r\n  arrange(-n) %>% \r\n  slice(1:5) %>% \r\n  ungroup() %>% \r\n  mutate(song = fct_reorder(song, no))\r\n\r\nggplot(data = top_5_words) +\r\n  geom_col(aes(x = n,\r\n               y = word),\r\n           fill = \"pink2\") +\r\n  facet_wrap( ~song, \r\n               scales = 'free') +\r\n  labs(x = \"Lyric\",\r\n       y = \"Amount Used\",\r\n       title = \"Most Common Words in Born to Die, Lana Del Rey\",\r\n       caption = \"Figure 1. Most common works in each track of Lana Del Rey's first album, Born To Die. (Electric Lady Studios 2012)\") +\r\n  theme(panel.spacing.x = unit(1, \"lines\"),\r\n                         panel.spacing.y = unit(1, \"lines\")) +\r\n  theme_minimal()\r\n\r\n\r\n\r\n\r\nSentiment Analysis\r\n\r\n\r\nhide\r\n\r\nlana_afinn <- lana_words_clean %>% \r\n  inner_join(get_sentiments('afinn'),\r\n             by = 'word') %>% \r\n    mutate(song = fct_reorder(song, no))\r\n\r\n#lana_afinn_counts <- lana_afinn %>% \r\n # count(song, value)\r\n\r\nlana_afinn_means <- lana_afinn %>% \r\n  group_by(song) %>% \r\n  summarize(mean_affin = mean(value))\r\n\r\n\r\n\r\n\r\nlana_nrc <- lana_words_clean %>% \r\n  inner_join(get_sentiments('nrc')) \r\n\r\nlana_nrc_counts <- lana_nrc %>% \r\n  count(no, song, sentiment) %>% \r\n  mutate(song = fct_reorder(song, no))\r\n\r\n\r\n\r\nTracklist Afinn Means\r\n\r\n\r\nhide\r\n\r\nggplot(data = lana_afinn_means,\r\n       aes(x = fct_rev(factor(song)),\r\n           y = mean_affin)) +\r\n  geom_col(fill = \"pink2\") +\r\n  coord_flip() +\r\n  labs(y = \"Mean Afinn Value\",\r\n       x = \"Track Title\",\r\n       title = \"Afinn Value for Born to Die by Lana del Rey\",\r\n       caption = \"Figure 2. Average Afinn value for each track on Born to Die, Lana del Rey's breakout  album (Electric Lady Studios 2012).\") +\r\n  theme_minimal()\r\n\r\n\r\n\r\n\r\nTracklist NRC Sentiment Analysis\r\n\r\n\r\nhide\r\n\r\nggplot(data = lana_nrc_counts,\r\n       aes(x = sentiment, \r\n           y = n)) +\r\n  geom_col(fill = 'pink2') +\r\n  facet_wrap( ~song, scales = \"fixed\") +\r\n  coord_flip() +\r\n  labs(y = \"Amount of NRC Words\",\r\n       x = \"NRC Sentiment\",\r\n       title = \"NRC Sentiment Analysis of Born to Die\",\r\n       caption = \"Figure 3. NRC sentiment analysis of the lyrics in each track from Born to Die by Lana Del Rey (Electric Lady Studios 2012).\") +\r\n  theme_minimal()\r\n\r\n\r\n\r\n\r\nData Conclusion\r\nBorn to Die is Lana Del Rey’s breakout 2012 album and is an important pop album to me. The album is filled with angst, lust, and romanticized depression. Her music filled the tumblr social media landscape, and began the flower-crown, pastel-blues era of fashion and pop culture. I wanted to do a text analysis of Born to Die to see how the songs were analyzed, as the album is overall very sad. I was shocked to see that the album was regarded as positive, as determined by the Afinn means analysis. Additionally, many songs rank highly in “positive” and “trust” values, when in reality these songs are not expressing these sentiments. This text analysis sheds light to the fact that Born to Die camouflages sad topics with bright lyrics and soft, crooning voice. This combination allows Born to Die to stump coding text analysis, but provides for a great album.\r\nData Citation\r\nElectric Lady Studios, 2012. Lana Del Rey, Born to Die.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-12-project2/born_to_die.jpg",
    "last_modified": "2022-03-12T19:11:44-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-12-project3/",
    "title": "Experience in Non-Linear Least Squares",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Margaret Hammond",
        "url": {
          "https://github.com/mbhammond/a2-hammond-margaret": {}
        }
      }
    ],
    "date": "2022-03-12",
    "categories": [],
    "contents": "\r\n1. Overview\r\nIn this task, I will be using the Lightfoot (2020) data on lizards in the Jornada Basin LTER site, New Mexico, 1989-2006. I will be creating a non linear least squares model to estimate the parameters of a length to weight model for the lizard populations.\r\n2. Explore the Data\r\n2.1 Read in the data\r\n\r\n\r\nhide\r\n\r\nlizards <- read_csv(here(\"data\", \"lizard.csv\")) %>% \r\n  mutate(log_length = log(SV_length), # use log() to linearize the model\r\n         log_weight = log(weight))\r\n\r\n\r\n\r\n3. Set up the model\r\nMust set up the NLS model of weight as a function of snout to vent length to be able to make guesses for coefficients a and b. Take the data and create a linear model in order for OLS regression to occur.\r\n\\[\r\nW = a(SVL)^b\r\n\\] In this model, W is weight, and SVL is snout to vent length.\r\n\r\n\r\nhide\r\n\r\nlizards_model <- function(a, SVL, b) {\r\n  W = a*SVL^b\r\n  return(W)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nhide\r\n\r\nparameter_guess <- lm(log_weight ~ log_length, data = lizards) # Created for OLS\r\n\r\nlizards_coef <- coef(parameter_guess) \r\n\r\n# lizards_coef checking the coefficients\r\n\r\n\r\n\r\n4. Functions\r\nCreate the general lizards NLS model of weight as a function of snout to vent length.\r\n\r\n\r\nhide\r\n\r\nlizards_nls <- nls(weight ~ lizards_model(a, SV_length, b),\r\n                   data = lizards,\r\n                   start = list(\r\n                     a = 2.718^(lizards_coef[1]/lizards_coef[2]),\r\n                     b = lizards_coef[2]),\r\n                   trace = TRUE)\r\n\r\n\r\n\r\n4.1 Table of Model\r\nThis table shows the estimated parameters for the NLS model.\r\n\r\n\r\nhide\r\n\r\ntidy_nls <- tidy(lizards_nls)\r\n\r\ntidy_nls$p.value <- ifelse(tidy_nls$p.value < .001, paste('< .001'))\r\n\r\ntidy_nls %>% \r\n  kable(col.names = c('Parameter', \r\n                      'Estimated', \r\n                      'Standard Error', \r\n                      'Statistic',\r\n                      'P Values'), \r\n        caption = 'Table 1. Parameter estimates of coefficient a and b for the nls model of weight as a function of snout to vent length of lizards in Jornada Basin LTER, from 1989-2006 (Lightfoot 2020) .',\r\n        digits = 4) %>% \r\n  kable_classic(bootstrap_options = \"striped\", full_width = FALSE)\r\n\r\n\r\n\r\nTable 1: Table 1. Parameter estimates of coefficient a and b for the nls model of weight as a function of snout to vent length of lizards in Jornada Basin LTER, from 1989-2006 (Lightfoot 2020) .\r\n\r\n\r\nParameter\r\n\r\n\r\nEstimated\r\n\r\n\r\nStandard Error\r\n\r\n\r\nStatistic\r\n\r\n\r\nP Values\r\n\r\n\r\na\r\n\r\n\r\n0.0003\r\n\r\n\r\n0.000\r\n\r\n\r\n8.5384\r\n\r\n\r\n< .001\r\n\r\n\r\nb\r\n\r\n\r\n2.4532\r\n\r\n\r\n0.027\r\n\r\n\r\n90.9296\r\n\r\n\r\n< .001\r\n\r\n\r\n4.2 NLS Predictions\r\nI will use the NLS model to generate predictions of weight based on snout to vent length from the Lightfoot, 2020 data.\r\n\r\n\r\nhide\r\n\r\ngeneral_mdl_pred <- predict(lizards_nls)\r\n\r\n\r\nlizards_complete <- cbind(lizards, general_mdl_pred)\r\n\r\nggplot(data = lizards_complete,\r\n       aes(x = SV_length, \r\n           y = general_mdl_pred)) +\r\n  geom_point(aes(x = SV_length, y = weight, color = sex)) +\r\n  scale_color_manual(values = c('pink', 'blue2')) +\r\n  geom_line(color = 'indianred2', size = 1) +\r\n  labs(x = 'Snout to Vent Length (mm)',\r\n       y = 'Weight (g)',\r\n       title = \"Lizard NLS Model Predictions\",\r\n       caption = 'Figure 1. NLS vs measured weight and\r\n       snout to vent length of lizards in\r\n       Jornada Basin LTER site, 1989-2006 (Lightfoot 2020)') +\r\n  theme_minimal()\r\n\r\n\r\n\r\n\r\nFit NLS to Western Whiptail lizard\r\nI will filter out the dataset for male Western Whiptail lizard (Cnemidophorus tigrisatus). Then, I will fit an NLS model to this subset. After, I compare the output from the species specific NLS model to the general NLS model for all species by graphing the model fits on the Western Whiptail male data.\r\n\r\n\r\nhide\r\n\r\n# filter out just male Western Whiptail\r\n\r\nwhip_sub <- lizards %>% \r\n  filter(spp == 'CNTI', \r\n         sex == 'M') %>% \r\n  mutate(log_weight = log(weight)) %>% \r\n  mutate(log_length = log(SV_length))\r\n\r\n\r\nwhip_pred <- lm(log_weight ~ log_length, data = whip_sub)\r\n\r\nwhip_coef <- coefficients(whip_pred)\r\n\r\nwhip_nls <- nls(weight ~ lizards_model(a, SV_length, b),\r\n                   data = whip_sub,\r\n                   start = list(\r\n                     a = 2.718^(whip_coef[1]/whip_coef[2]),\r\n                     b = whip_coef[2]),\r\n                   trace = TRUE)\r\n\r\ntidy_whip <- tidy(whip_nls)\r\n\r\n# tidy_whip\r\n\r\n\r\n\r\nCompare the Species NLS to General NLS to see which is a best fit for the Western Whiptail species.\r\n\r\n\r\nhide\r\n\r\nlizards_general_whip <- lizards_complete %>% \r\n  filter(spp == 'CNTI',\r\n         sex == 'M')\r\n\r\nwhip_mdl_pred <- predict(whip_nls)\r\n\r\ncomplete_pred <- cbind(lizards_general_whip, whip_mdl_pred)\r\n\r\nrmse_whip <- rmse(whip_nls, complete_pred)\r\n\r\nrmse_gen <- rmse(lizards_nls, complete_pred)\r\n\r\nrmse_complete <- cbind(rmse_whip, rmse_gen)\r\n# rmse_complete, rmse_whip has a lower value than rmse_gen, RMSE of whip specific set is better for Western Whiptail species\r\n\r\n\r\n\r\n\r\n\r\nhide\r\n\r\n# Create plot showing the differences between the general NLS and species specific nls for Western Whip\r\ncaption = 'Figure 2. NLS species specific model for Western Whiptail (in red) vs NLS of all lizard species (in navy) in Jornada Basin LTER site, 1989 - 2006. Black points represent actual Western Whiptail measurements of weight (g) to snout to vent length (mm) (Lightfoot 2020). RMSE calculations done for both models, species specific model contained a lower RMSE score of 3.349 compared to general NLS model RMSE of 3.562. The species specific RMSE should be used when doing RMSE calculations for Western Whiptail, it is better fit for the data.'\r\n\r\nggplot(data = complete_pred) +\r\n  geom_point(aes(x = SV_length, y = weight)) +\r\n  geom_line(aes(x = SV_length, y = general_mdl_pred), color = 'red', size = 1) +\r\n  geom_line(aes(x = SV_length, y = whip_mdl_pred), color = 'navy', size = 1) +\r\n  theme_minimal() +\r\n  labs(x = 'Snout to Vent Length (mm)',\r\n       y = 'Weight (g)',\r\n       title = 'General NLS vs. Species Specific NLS',\r\n      caption = str_wrap(caption)) \r\n\r\n\r\n\r\n\r\nData Citation\r\nLightfoot, D. and W.G. Whitford. 2020. Lizard pitfall trap data from 11 NPP study locations at the Jornada Basin LTER site, 1989-2006 ver 37. Environmental Data Initiative. https://doi.org/10.6073/pasta/4a6e258fb49c31e222ecbbcfd128967f\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-12-project3/project3_files/figure-html5/unnamed-chunk-6-1.png",
    "last_modified": "2022-03-12T19:21:06-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-19-project/",
    "title": "Binary Logistic Regression Experience",
    "description": "This is an example of an assignment I would do in ESM 244.",
    "author": [
      {
        "name": "Margaret Hammond",
        "url": {
          "https://github.com/mbhammond/a2_hammond_margaret": {}
        }
      }
    ],
    "date": "2022-02-19",
    "categories": [],
    "contents": "\r\n1. Overview\r\nThis data focuses on the survival, growth and biomass estimates of two dominant palmetto species, Serenoa repens and Sabal etonia, populations in south-centra Florida from 1981-2017. In this task, I will be doing a binary linear regression model using plant height, canopy length, canopy width, and green leaves as predictor variables.\r\n2. Explore the Data\r\n2.1 Read and Wrangle the Data\r\n\r\n\r\nhide\r\n\r\npalmetto <- read_csv(here(\"data\", \"palmetto.csv\"))\r\n\r\n# species 1 is serenoa repends, species 2 is sabal etonia\r\n\r\n# subset of height, length, width, green_lvs\r\n\r\npalmetto_sub <- palmetto %>% \r\n  select(species, height, length, width, green_lvs) %>% \r\n  mutate(species = case_when(\r\n    species == \"1\" ~ \"0\", #serenoa repends now 0\r\n    species == \"2\" ~ \"1\" #sabal etonia now 1\r\n  )) %>% \r\n  drop_na()\r\n\r\npalmetto_sub$species <- as.factor(palmetto_sub$species)\r\n\r\n\r\n# class(palmetto_sub$species) checking the class of the species\r\n\r\n\r\n\r\n2.2 Data Visualization\r\nExplore differences in height, canopy length, canopy width, and green leaves for the two palmetto species.\r\n\r\n\r\nhide\r\n\r\npalmetto_plot <- palmetto_sub %>% \r\n  mutate(species = case_when(\r\n    species == \"0\" ~ \"Serenoa repends\", #serenoa repends now 0\r\n    species == \"1\" ~ \"Sabal etonia\" #sabal etonia now 1\r\n  ))\r\n  \r\nheight_plot <- ggplot(data = palmetto_sub, aes(x = species, y = height, color = species)) +\r\n  geom_quasirandom(size = 0.5)\r\n\r\nlength_plot <- ggplot(data = palmetto_plot, aes(x = species, \r\n                                                 y = length, \r\n                                                 color = species)) +\r\n  geom_quasirandom(size = 0.5, show.legend = FALSE) +\r\n  scale_color_manual(values = c(\"dark green\", \"purple\")) +\r\n  labs(x = \"Species\",\r\n       y = \"Length of Canopy (cm)\",\r\n       title = \"Length of Canopy of Palmetto Species\",\r\n       caption = \"Figure 1. South-Central Palmetto species Serenoa repends \r\n       and Sabal etonia length of canopy (cm) from 1981-2017 (Abrahamson 2019)\") \r\n\r\nwidth_plot <- ggplot(data = palmetto_sub, aes(x = species, y = width, color = species)) +\r\n  geom_quasirandom(size = 0.5)\r\n\r\ngreen_plot <- ggplot(data = palmetto_plot, aes(x = species, y = green_lvs, color = species)) +\r\n  geom_quasirandom(size = 0.5, show.legend = FALSE) +\r\n  scale_color_manual(values = c(\"dark green\", \"purple\")) +\r\n  labs(x = \"Species\",\r\n       y = \"Count of Green Leaves\",\r\n       title = \"Amount of Green Leaves on Palmetto Species\", \r\n       caption = \"Figure 2. South-Central Palmetto species Serenoa repends \r\n       and Sabal etonia count of green leaves from 1981-2017 (Abrahamson 2019)\") \r\n\r\n# species 1 is serenoa repends, species 2 is sabal etonia\r\n\r\n# length and green_lvs are the most different between the two species\r\n\r\nlength_plot / green_plot\r\n\r\n\r\n\r\n\r\nFor data visualization, I chose to show the difference between the two species for canopy length (cm) and green leaves count. These two variables had the biggest differences in means, and will be important predictor variables in the binary logistic regression models.\r\n3. Binary Logistic Regression\r\nCreate a binary logistic regression model for the two palmetto species, using log odds of species using plant height, canopy length, canopy width, and green leaves as predictor variables. Based on the results of the cross validation, a model will be chosen as the better binary logistic regression model.\r\n2.1 Create the Binary Logistic Regression Models\r\n\r\n\r\nhide\r\n\r\nf1 <- species ~ height + length + width + green_lvs\r\n\r\nspec_blr1 <- glm(formula = f1,\r\n                 data = palmetto_sub,\r\n                 family = \"binomial\")\r\n\r\nf2 <- species ~ height + width + green_lvs\r\n\r\nspec_blr2 <- glm(formula = f2,\r\n                 data = palmetto_sub,\r\n                 family = \"binomial\")\r\n\r\n# class(palmetto_sub$species)\r\n# levels(palmetto_sub$species)\r\n# 0 is 0, 1 is 1. Serona is 0.\r\n\r\n\r\n\r\n# summary(spec_blr1)\r\n# summary(spec_blr2)\r\n\r\nblr1_tidy <- tidy(spec_blr1)\r\nblr2_tidy <- tidy(spec_blr2)\r\n\r\n# aictab(list(spec_blr1, spec_blr2))\r\n\r\n\r\n\r\n2.2 Use caret\r\nUse the package caret to do k-fold validation of the binary logistic regression model.\r\n\r\n\r\nhide\r\n\r\nset.seed(123)\r\n\r\ntr_ctrl <- trainControl(method = \"repeatedcv\",\r\n                        number = 10, repeats = 10)\r\n\r\n# Train the model\r\nmodel1 <- train(f1, data = palmetto_sub,\r\n                method = \"glm\",\r\n                family = \"binomial\",\r\n                trControl = tr_ctrl)\r\n#model1\r\n\r\nmodel2 <- train(f2, data = palmetto_sub,\r\n                method = \"glm\",\r\n                family = \"binomial\",\r\n                trControl = tr_ctrl)\r\n\r\n\r\n\r\n2.3 Table of Model 1\r\nCreate a table of model 1, chosen because had a better AIC score. This table shows the coefficients used in the Model 1 binary logistic regression.\r\n\r\n\r\nhide\r\n\r\nspec_blr1_tidy <- tidy(spec_blr1)\r\n\r\nspec_blr1_tidy$p.value <- ifelse(spec_blr1_tidy$p.value < .001, paste('< .001'))\r\n\r\n# 0 is Serenoa repens\r\n# 1 is Sabal etonia \r\nspec_blr1_tidy %>% \r\n  kable(col.names = c(\"Term\",\r\n                      \"Estimate\",\r\n                      \"Standard Error\",\r\n                      \"Statistic\",\r\n                      \"P Value\"),\r\n        caption = 'Table 1. Binary logistic regression model results for model 1, a model of plant species as a function of height, canopy length, canopy width an green leaves') %>% \r\n  kable_classic(bootstrap_options = \"striped\", full_width = FALSE)\r\n\r\n\r\n\r\nTable 1: Table 1. Binary logistic regression model results for model 1, a model of plant species as a function of height, canopy length, canopy width an green leaves\r\n\r\n\r\nTerm\r\n\r\n\r\nEstimate\r\n\r\n\r\nStandard Error\r\n\r\n\r\nStatistic\r\n\r\n\r\nP Value\r\n\r\n\r\n(Intercept)\r\n\r\n\r\n3.2266851\r\n\r\n\r\n0.1420708\r\n\r\n\r\n22.71180\r\n\r\n\r\n< .001\r\n\r\n\r\nheight\r\n\r\n\r\n-0.0292173\r\n\r\n\r\n0.0023061\r\n\r\n\r\n-12.66984\r\n\r\n\r\n< .001\r\n\r\n\r\nlength\r\n\r\n\r\n0.0458233\r\n\r\n\r\n0.0018661\r\n\r\n\r\n24.55600\r\n\r\n\r\n< .001\r\n\r\n\r\nwidth\r\n\r\n\r\n0.0394434\r\n\r\n\r\n0.0021000\r\n\r\n\r\n18.78227\r\n\r\n\r\n< .001\r\n\r\n\r\ngreen_lvs\r\n\r\n\r\n-1.9084747\r\n\r\n\r\n0.0388634\r\n\r\n\r\n-49.10728\r\n\r\n\r\n< .001\r\n\r\n\r\nProbability Calculations\r\nUse broom::augment to find the probabilities for each plant in the original dataset, and add a column for which species your model would classify that plant as (using a 50% cutoff).\r\n3. Model 1 Predictions\r\nCreate a table showing model 1’s ability to predict the palmetto species using binary linear regression.\r\n\r\n\r\nhide\r\n\r\n# 0 is Serenoa repens\r\n# 1 is Sabal etonia \r\n\r\nspec_blr1_fitted <- spec_blr1 %>% \r\n  augment(type.predict = \"response\") %>% \r\n  mutate(predict_species = case_when(\r\n    .fitted > .5 ~ \"1\", # probability over .5, higher chance it will be species 1, Sabal etonia\r\n    .fitted < .5 ~ \"0\"), # probability below .5, low chance it is Sabal etonia, assigned to Serenoa repens\r\n  accuracy = case_when(\r\n    species == predict_species ~ 1, # accurate results\r\n    species != predict_species ~ 0), # innacurate results\r\n  correct = case_when(\r\n    accuracy == 1 ~ 'y',\r\n    accuracy == 0 ~ 'n'\r\n  ))\r\n\r\n\r\naccuracy_sum <- spec_blr1_fitted %>% \r\n  group_by(species) %>% \r\n  summarize(accuracy = mean(accuracy, na.rm = TRUE) * 100)\r\n\r\ncorrect_sum <- spec_blr1_fitted %>% \r\n  group_by(correct, species) %>% \r\n  summarize(count = n()) %>% \r\n  pivot_wider(names_from = correct,\r\n              values_from = count)\r\n\r\n\r\ncorrect_final <- cbind(correct_sum, accuracy_sum) %>% \r\n  select(!1) %>% \r\n  mutate(species = case_when(\r\n    species == 1 ~ 'Sabal etonia',\r\n    species == 0 ~ 'Serenoa repens'\r\n  ))  \r\n  \r\ncorrect_final <-correct_final[, c(3, 1, 2, 4)]\r\n\r\n\r\n  \r\n#spec_count_right <- spec_blr1_fitted %>% \r\n # count(predict_species, species)\r\n\r\n#spec_blr1_counts <- spec_blr1_fitted %>% \r\n # tabyl(species, predict_species)\r\n\r\n#spec_proportions <- spec_blr1_counts %>% \r\n # mutate(species = case_when(\r\n  #  species == \"0\" ~ \"Serenoa repens\",\r\n   # species == \"1\" ~ \"Sabal etonia\")) %>% \r\n#  adorn_percentages() %>% \r\n # adorn_pct_formatting(digits = 2) %>% \r\n  #adorn_ns()\r\n\r\ncorrect_final %>% \r\n  kable(col.names = c(\r\n    \"Species\",\r\n    \"Amount Incorrect\",\r\n    'Amount Correct',\r\n    \"Percent Correct\"),\r\n    caption = \"Table 2. Probability of correct Sabal etonia and Serenoa repens species as predicted by Model 1.\",\r\n    digits = 2) %>% \r\n  kable_classic(bootstrap_options = \"striped\", full_width = FALSE)\r\n\r\n\r\n\r\nTable 2: Table 2. Probability of correct Sabal etonia and Serenoa repens species as predicted by Model 1.\r\n\r\n\r\nSpecies\r\n\r\n\r\nAmount Incorrect\r\n\r\n\r\nAmount Correct\r\n\r\n\r\nPercent Correct\r\n\r\n\r\nSerenoa repens\r\n\r\n\r\n564\r\n\r\n\r\n5548\r\n\r\n\r\n90.77\r\n\r\n\r\nSabal etonia\r\n\r\n\r\n454\r\n\r\n\r\n5701\r\n\r\n\r\n92.62\r\n\r\n\r\n3.1 Probability Calculations Conclusion\r\nModel 1 was able to predict 90.77% correct for Serenoa repens and 92.62% for Sabal etonia. Model 1 was able to predict the plant species based off of the predictor variables relatively well.\r\nData Citation\r\nAbrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-02-19-project/project_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-03-12T18:47:29-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-07-welcome/",
    "title": "Welcome",
    "description": "This is me welcoming everyone! Yay!",
    "author": [
      {
        "name": "Margaret Hammond",
        "url": {}
      }
    ],
    "date": "2022-02-07",
    "categories": [],
    "contents": "\r\nHey everybody! Hope you’re having a great day! Woohoo!\r\nDistill is a publication format for scientific and technical writing, native to the web.\r\nLearn more about using Distill at https://rstudio.github.io/distill.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-07T14:28:41-08:00",
    "input_file": {}
  }
]
